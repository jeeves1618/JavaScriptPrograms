To install liver server through NPM
	npm install live-server -g - For Windows
	sudo npm install live-server -g - For Mac

To start the Live Server
	live-server
	
DOM - Document Object Model is the structured representation of HTML documents. Allows JS and CSS to accesses HTML elements and styles to manipulate them.
DOM is not part of JavaScript. It is part of WEB APIs.

Basics of HTML
	- classes and Ids
	- Classes doesn't have to be unique. Ids have to be unique
	- When you put form elements in a section, it makes sense to change div to form
	
Basics of CSS
	- sytle sheet is linked through link and rel=stylesheet within HTML
	- Standard HTML elements are accessed by their names within the style sheet. Example:  body {font-family : Arial }
	- Classes are accessed through dot operator. Example: .first {font-family : Comic }
	- Ids are accessed through # operator. Example: #first {font-family : Comic }
	- if you want to apply a style to all sections, use the * operator. * {font-family : Arial}
	
Back to JS
	- Selecting an element in JavaScript - document.querySelector('.first') 
	- JavaScript accesses HTML elements in the same way as CSS. 
	- document.querySelector('.first') will give the value of the element identified by the class 'first'. To change the value, just assign the new value document.querySelector('.first') = 'New Value'
	- To get the value use the textContent property. document.querySelector('.first').textContent will give the value 
	- To get the value from a input field, use document.querySelector('.first').value
	
So far, we are not capturing any events from the web page.

Handling Click Events
	- In order to get the data from the text box on the click of the button (class = "btn two") by adding a listener for the action and function to do what needs to be done on that action. 
	- Here we have a text box with the class boxer and a button with the class "btn two". We can access the data entered in the text box and display it in console log on the click of the button as below
	document.querySelector('.two').addEventListener 
	('click', function(){
		console.log(document.querySelector('.boxer').value);
		}

The problem with querySelector:
	if you have three buttons like these,	
	<button class="show-modal">Show modal 1</button>
    <button class="show-modal">Show modal 2</button>
    <button class="show-modal">Show modal 3</button>

	and you want to select them all, document.querySelector will not work. Because, it will select only the first button. So, you have to use document.querySelectorAll
	
	Remember that document.querySelectorAll('.someclass') is an array
	
Diagrams.net has the free flowcharting ability

JS Engine:
	JS Engine is the program that runs Javascript. Most popular one is V8. It also runs the NodeJS. Two major constituents of JS Engine Call Stack and Memory Heap.
	There are three ways of converting a high level programming language into a machine code.
		1. Compilation: Entire code is converted into a machine code at once and written to a binary file that can be executed by a computer.
		2. Inpretation: Interpretor runs through the code and executes it line by line
		3. Just-In-Time (JIT) compilation: Entire code is converted into a machine code at once and then executed immediatly. JS is JIT compilation. The difference between Compilation and JIT are
			a. Compilation and execution happens at different times during compilation. In JIT it happens immediatly.
			b. The code is compiled once and executed many times during compilation. In JIT, code is compiled everytime before execution.
			c. The compiled code is portable after compilation. In JIT the compiled code is not portable.
	JS has only one main thread. So, it implements non blocking event loops to run back ground processes. 
	Inside the JS Engine, an execution context is created. A global execution context is created for the top level code. Then an new execution context is created for functions and methods (functions are 
	methods in objects)
	All these execution contexts will make up the call stack. 

Deeper look into Execution Context
	Whats inside EC? Variable environment, Scope Chain and This keyword. 
	